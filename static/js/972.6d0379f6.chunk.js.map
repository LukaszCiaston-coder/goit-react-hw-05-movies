{"version":3,"file":"static/js/972.6d0379f6.chunk.js","mappings":"6SAqHA,EA9Ga,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAaC,EAAAA,EAAAA,KAAbD,SACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAsCN,EAAAA,EAAAA,UAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACMC,EAAgB,IAEtBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,gGAC1BL,GAAa,GADa,SAIlBM,EAAS,mCACM,IACfC,EAAaC,KAAKC,KAAKC,IACvBC,EAAY,GAETC,EAAO,EATQ,YASLA,GAAQL,GATH,kCAUCM,MAAM,2DAAD,OACiCP,EADjC,iBACgDM,EADhD,qBACiET,IAXvE,eAUhBW,EAVgB,iBAcHA,EAASC,OAdN,QAchBC,EAdgB,OAehBC,EAASD,EAAKE,SAAW,GAE/BP,EAAUQ,KAAV,MAAAR,GAAS,OAASM,IAjBI,QASeL,IATf,uBAoBxBhB,EAAkBe,GAClBX,GAAa,GArBW,kDAuBxBoB,QAAQC,MAAM,wCAAd,MACArB,GAAa,GAxBW,0DAAH,qDA4BzBK,GACD,GAAE,IAEH,IAAMiB,EAAkB,SAAAN,GACtB,IAAMO,EAAeP,EAAKQ,SAC1BtB,EAAeqB,GAEfE,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACrC,EAEKC,GAAoB5B,EAAc,GAAKE,EACvC2B,EAAoB7B,EAAcE,EAClC4B,EAAgBpC,EAAeqC,MACnCF,EACAD,GAGF,OACE,iBAAKI,UAAS,yBAAoBpC,EAAW,YAAc,IAA3D,WACE,eAAIoC,UAAU,aAAd,mCAEClC,GACC,SAACmC,EAAA,EAAD,KAEA,iCACE,eAAID,UAAU,kBAAd,SACGF,EAAcI,KAAI,SAAAC,GAAK,OACtB,eAAIH,UAAU,kBAAd,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAME,IAAML,UAAU,aAA3C,UACE,iBAAKA,UAAU,wBAAf,WACE,gBACEM,IAAG,0CAAqCH,EAAMI,aAC9CC,IAAKL,EAAMM,MACXT,UAAU,iBAGZ,iBAAKA,UAAU,oBAAf,WACE,eAAIA,UAAU,cAAd,SAA6BG,EAAMM,SACnC,cAAGT,UAAU,iBAAb,SAA+BG,EAAMO,oBAXRP,EAAME,GADrB,MAoBzBb,OAAOmB,WAAa,MACnB,SAAC,IAAD,CACEC,UAAWrC,KAAKC,KAAKd,EAAemD,OAAS3C,GAC7C4C,mBAAoB,EACpBC,qBAAsB,EACtBC,aAAc3B,EACd4B,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAGpB3B,OAAOmB,YAAc,MACpB,SAAC,IAAD,CACEC,UAAWrC,KAAKC,KAAKd,EAAemD,OAAS3C,GAC7C4C,mBAAoB,EACpBC,qBAAsB,EACtBC,aAAc3B,EACd4B,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,gBAO9B,C,uDClHD,MAAkC,gCAAlC,EAA2E,uB,SCS3E,EARe,WACb,OACE,gBAAKnB,UAAWoB,EAAhB,UACE,gBAAKpB,UAAWoB,KAGrB,C","sources":["components/Home/Home.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Home/Home.css';\nimport { useDarkMode } from '../Utils/DarkMode';\nimport Loader from '../Loader/Loader';\nimport ReactPaginate from 'react-paginate';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const { darkMode } = useDarkMode();\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const moviesPerPage = 20;\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setIsLoading(true);\n\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32';\n        const totalResults = 500;\n        const totalPages = Math.ceil(totalResults / moviesPerPage);\n        const allMovies = [];\n\n        for (let page = 1; page <= totalPages; page++) {\n          const response = await fetch(\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}&page=${page}&per_page=${moviesPerPage}`\n          );\n\n          const data = await response.json();\n          const movies = data.results || [];\n\n          allMovies.push(...movies);\n        }\n\n        setTrendingMovies(allMovies);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error while fetching trending movies:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  const handlePageClick = data => {\n    const selectedPage = data.selected;\n    setCurrentPage(selectedPage);\n\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const indexOfLastMovie = (currentPage + 1) * moviesPerPage;\n  const indexOfFirstMovie = currentPage * moviesPerPage;\n  const currentMovies = trendingMovies.slice(\n    indexOfFirstMovie,\n    indexOfLastMovie\n  );\n\n  return (\n    <div className={`container-home ${darkMode ? 'dark-mode' : ''}`}>\n      <h2 className=\"home-title\">Trending Movies Today</h2>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ul className=\"home-movie-list\">\n            {currentMovies.map(movie => (\n              <li className=\"home-movie-item\" key={movie.id}>\n                <Link to={`/movies/${movie.id}`} className=\"movie-link\">\n                  <div className=\"movie-image-container\">\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                      alt={movie.title}\n                      className=\"movie-image\"\n                    />\n\n                    <div className=\"movie-description\">\n                      <h3 className=\"movie-title\">{movie.title}</h3>\n                      <p className=\"movie-overview\">{movie.overview}</p>\n                    </div>\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </ul>\n\n          {window.innerWidth > 760 && (\n            <ReactPaginate\n              pageCount={Math.ceil(trendingMovies.length / moviesPerPage)}\n              pageRangeDisplayed={3}\n              marginPagesDisplayed={1}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              subContainerClassName={'pages pagination'}\n              activeClassName={'active'}\n            />\n          )}\n          {window.innerWidth <= 760 && (\n            <ReactPaginate\n              pageCount={Math.ceil(trendingMovies.length / moviesPerPage)}\n              pageRangeDisplayed={0}\n              marginPagesDisplayed={1}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              subContainerClassName={'pages pagination'}\n              activeClassName={'active'}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\",\"loader\":\"Loader_loader__+lRPl\",\"spin\":\"Loader_spin__E4RJ0\"};","import styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={styles.loaderContainer}>\n      <div className={styles.loader}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n"],"names":["useState","trendingMovies","setTrendingMovies","darkMode","useDarkMode","isLoading","setIsLoading","currentPage","setCurrentPage","moviesPerPage","useEffect","fetchTrendingMovies","apiKey","totalPages","Math","ceil","totalResults","allMovies","page","fetch","response","json","data","movies","results","push","console","error","handlePageClick","selectedPage","selected","window","scrollTo","top","behavior","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","className","Loader","map","movie","to","id","src","poster_path","alt","title","overview","innerWidth","pageCount","length","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","styles"],"sourceRoot":""}