{"version":3,"file":"static/js/972.69443520.chunk.js","mappings":"8PAqDA,EAhDa,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAaC,EAAAA,EAAAA,KAAbD,SAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAET,mCAFS,SAGDC,MAAM,2DAAD,OADb,qCAFS,cAGlBC,EAHkB,gBAMLA,EAASC,OANJ,OAMlBC,EANkB,OAOxBR,EAAkBQ,EAAKC,SAPC,kDASxBC,QAAQC,MAAM,6BAAd,MATwB,0DAAH,qDAazBP,GACD,GAAE,KAGD,iBAAKQ,UAAS,yBAAoBX,EAAW,YAAc,IAA3D,WACE,eAAIW,UAAU,aAAd,oCACA,eAAIA,UAAU,kBAAd,SACGb,EAAec,KAAI,SAAAC,GAAK,OACvB,eAAIF,UAAU,kBAAd,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAMJ,UAAU,aAA3C,UACE,iBAAKA,UAAU,wBAAf,WACE,gBACEK,IAAG,0CAAqCH,EAAMI,aAC9CC,IAAKL,EAAMM,MACXR,UAAU,iBAGZ,iBAAKA,UAAU,oBAAf,WACE,eAAIA,UAAU,cAAd,SAA6BE,EAAMM,QAAY,KAC/C,cAAGR,UAAU,iBAAb,SAA+BE,EAAMO,oBAXRP,EAAME,GADpB,QAqBhC,C,sBCnDD,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CAEImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Home/Home.css';\nimport { useDarkMode } from '../Utils/DarkMode';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const { darkMode } = useDarkMode();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32'; // Klucz API themoviedb.org\n        const response = await fetch(\n          `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n        );\n        const data = await response.json();\n        setTrendingMovies(data.results);\n      } catch (error) {\n        console.error('Error while fetching data:', error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div className={`container-home ${darkMode ? 'dark-mode' : ''}`}>\n      <h2 className=\"home-title\">Trending Movies Today</h2>\n      <ul className=\"home-movie-list\">\n        {trendingMovies.map(movie => (\n          <li className=\"home-movie-item\" key={movie.id}>\n            <Link to={`/movies/${movie.id}`} className=\"movie-link\">\n              <div className=\"movie-image-container\">\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.title}\n                  className=\"movie-image\"\n                />\n\n                <div className=\"movie-description\">\n                  <h3 className=\"movie-title\">{movie.title}</h3>{' '}\n                  <p className=\"movie-overview\">{movie.overview}</p>\n                </div>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","trendingMovies","setTrendingMovies","darkMode","useDarkMode","useEffect","fetchTrendingMovies","fetch","response","json","data","results","console","error","className","map","movie","to","id","src","poster_path","alt","title","overview","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}