{"version":3,"file":"static/js/871.8de8bfe9.chunk.js","mappings":"uQA6CA,EAxCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,KAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEP,mCAFO,SAGCC,MAAM,sCAAD,OACYT,EADZ,4BADb,qCAFO,cAGhBU,EAHgB,gBAMHA,EAASC,OANN,OAMhBC,EANgB,OAOtBR,EAAWQ,EAAKC,SAPM,kDAStBC,QAAQC,MAAM,6BAAd,MATsB,0DAAH,qDAavBP,GACD,GAAE,CAACR,KAGF,iBAAKgB,UAAS,4BAAuBX,EAAW,YAAc,IAA9D,WACE,qCACA,eAAIW,UAAU,eAAd,SACGb,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAOrB,SAAC,KAAD,CAAMC,GAAE,kBAAatB,GAAWgB,UAAU,YAA1C,qCAKL,C,sBC3CD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOjB,GAEP,YADAW,EAAOX,EAET,CAEIgB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport '../Reviews/Reviews.css';\nimport { useDarkMode } from '../Utils/DarkMode';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const darkMode = useDarkMode();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32'; // Klucz API themoviedb.org\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Error while fetching data:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={`reviews-container ${darkMode ? 'dark-mode' : ''}`}>\n      <h2>Reviews</h2>\n      <ul className=\"reviews-list\">\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n      <Link to={`/movies/${movieId}`} className=\"back-link\">\n        Back to Movie Details\n      </Link>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","darkMode","useDarkMode","useEffect","fetchMovieReviews","fetch","response","json","data","results","console","error","className","map","review","author","content","id","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}