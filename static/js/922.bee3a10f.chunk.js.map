{"version":3,"file":"static/js/922.bee3a10f.chunk.js","mappings":"uQAqGA,EA5FqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAaC,EAAAA,EAAAA,KAAbD,UAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEP,mCAFO,SAGCC,MAAM,sCAAD,OACYX,EADZ,oBADb,mCACa,oBAHN,cAGhBY,EAHgB,gBAMHA,EAASC,OANN,OAMhBC,EANgB,OAOtBV,EAAgBU,GAPM,kDAStBC,QAAQC,MAAM,6BAAd,MATsB,0DAAH,qDAajBC,EAAkB,mCAAG,sGAER,mCAFQ,SAGAN,MAAM,sCAAD,OACYX,EADZ,2BADb,qCAFQ,cAGjBY,EAHiB,gBAMJA,EAASC,OANL,OAMjBC,EANiB,OAOvBR,EAAYQ,EAAKI,QAAQC,QAAO,SAAAC,GAAK,MAAmB,YAAfA,EAAMC,IAAV,KAPd,kDASvBN,QAAQC,MAAM,6BAAd,MATuB,0DAAH,qDAaxBN,IACAO,GACD,GAAE,CAACjB,IASJ,OACE,gBAAKsB,UAAS,0BAAqBf,EAAW,YAAc,IAA5D,SACGJ,GACC,0BACE,iBAAKmB,UAAU,0BAAf,WACE,iBAAKA,UAAU,kBAAf,WACE,gBACEA,UAAU,sBACVC,IACEpB,EAAaqB,YAzDR,kCA0DgBrB,EAAaqB,YAxDlD,uIA2DcC,IAAKtB,EAAauB,MAClBC,QArBa,WACzB,GAAItB,EAASuB,OAAS,EAAG,CAAC,IAAD,EACjBC,EAAU,UAAGxB,EAAS,UAAZ,aAAG,EAAayB,IAChCC,OAAOC,KAAP,0CAA+CH,GAAc,SAC9D,CACF,EAiBaI,MAAO,CAAEC,OAAQ,aAElB7B,EAASuB,OAAS,IACjB,gBAAKN,UAAU,oBAAf,mCAGJ,iBAAKA,UAAU,gBAAf,WACE,eAAIA,UAAU,cAAd,SAA6BnB,EAAauB,SAC1C,cAAGJ,UAAU,cAAb,SACGnB,EAAagC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAErD,eAAGjB,UAAU,gBAAb,2BACiBnB,EAAaqC,iBAE9B,cAAGlB,UAAU,iBAAb,SAA+BnB,EAAasC,YAC5C,iBAAKnB,UAAU,UAAf,WACE,SAAC,KAAD,CAAMoB,GAAE,kBAAa1C,EAAb,SAA6BsB,UAAU,MAA/C,mBAGA,SAAC,KAAD,CAAMoB,GAAE,kBAAa1C,EAAb,YAAgCsB,UAAU,MAAlD,iCAQR,yCAIP,C,sBCnGD,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQlB,EAAKmB,GACpE,IACE,IAAIC,EAAON,EAAId,GAAKmB,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOnC,GAEP,YADA8B,EAAO9B,EAET,CAEIkC,EAAKE,KACPP,EAAQM,GAERE,QAAQR,QAAQM,GAAOG,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,EAClE,CAEA,SAASH,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport '../MovieDetails/MovieDetails.css';\nimport { useDarkMode } from '../Utils/DarkMode';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst notFoundImageUrl =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCMq4cGfAmaJAYVpXFPLY57EzVip1FTMK-ETQH1aU24VD-bYx5wJ4srHFP99zAgqXBvfQ&usqp=CAU';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [trailers, setTrailers] = useState([]);\n  const { darkMode } = useDarkMode();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n        );\n        const data = await response.json();\n        setMovieDetails(data);\n      } catch (error) {\n        console.error('Error while fetching data:', error);\n      }\n    };\n\n    const fetchMovieTrailers = async () => {\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`\n        );\n        const data = await response.json();\n        setTrailers(data.results.filter(video => video.type === 'Trailer'));\n      } catch (error) {\n        console.error('Error while fetching data:', error);\n      }\n    };\n\n    fetchMovieDetails();\n    fetchMovieTrailers();\n  }, [movieId]);\n\n  const handleTrailerClick = () => {\n    if (trailers.length > 0) {\n      const trailerKey = trailers[0]?.key;\n      window.open(`https://www.youtube.com/watch?v=${trailerKey}`, '_blank');\n    }\n  };\n\n  return (\n    <div className={`movie-container ${darkMode ? 'dark-mode' : ''}`}>\n      {movieDetails ? (\n        <div>\n          <div className=\"movie-details-container\">\n            <div className=\"image-container\">\n              <img\n                className=\"movie-details-image\"\n                src={\n                  movieDetails.poster_path\n                    ? IMAGE_BASE_URL + movieDetails.poster_path\n                    : notFoundImageUrl // UÅ¼yj obrazu \"Not Found\" w przypadku braku obrazu\n                }\n                alt={movieDetails.title}\n                onClick={handleTrailerClick}\n                style={{ cursor: 'pointer' }}\n              />\n              {trailers.length > 0 && (\n                <div className=\"trailer-indicator\">Trailer Available</div>\n              )}\n            </div>\n            <div className=\"movie-details\">\n              <h2 className=\"movie-title\">{movieDetails.title}</h2>\n              <p className=\"movie-genre\">\n                {movieDetails.genres.map(genre => genre.name).join(', ')}\n              </p>\n              <p className=\"movie-release\">\n                Release Date: {movieDetails.release_date}\n              </p>\n              <p className=\"movie-overview\">{movieDetails.overview}</p>\n              <div className=\"buttons\">\n                <Link to={`/movies/${movieId}/cast`} className=\"btn\">\n                  Cast\n                </Link>\n                <Link to={`/movies/${movieId}/reviews`} className=\"btn\">\n                  Reviews\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","trailers","setTrailers","darkMode","useDarkMode","useEffect","fetchMovieDetails","fetch","response","json","data","console","error","fetchMovieTrailers","results","filter","video","type","className","src","poster_path","alt","title","onClick","length","trailerKey","key","window","open","style","cursor","genres","map","genre","name","join","release_date","overview","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}