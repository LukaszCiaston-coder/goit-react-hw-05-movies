{"version":3,"file":"static/js/922.d374fb1c.chunk.js","mappings":"uQA0FA,EAnFqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAaC,EAAAA,EAAAA,KAAbD,SAiCR,OA/BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEP,mCAFO,SAGCC,MAAM,sCAAD,OACYX,EADZ,oBADb,mCACa,oBAHN,cAGhBY,EAHgB,gBAMHA,EAASC,OANN,OAMhBC,EANgB,OAOtBV,EAAgBU,GAPM,kDAStBC,QAAQC,MAAM,6BAAd,MATsB,0DAAH,qDAajBC,EAAkB,mCAAG,sGAER,mCAFQ,SAGAN,MAAM,sCAAD,OACYX,EADZ,2BADb,qCAFQ,cAGjBY,EAHiB,gBAMJA,EAASC,OANL,OAMjBC,EANiB,OAOvBR,EAAYQ,EAAKI,QAAQC,QAAO,SAAAC,GAAK,MAAmB,YAAfA,EAAMC,IAAV,KAPd,kDASvBN,QAAQC,MAAM,6BAAd,MATuB,0DAAH,qDAaxBN,IACAO,GACD,GAAE,CAACjB,KAGF,gBAAKsB,UAAS,0BAAqBf,EAAW,YAAc,IAA5D,SACGJ,GACC,4BACE,eAAImB,UAAU,cAAd,SAA6BnB,EAAaoB,SAC1C,gBACED,UAAU,cACVE,IA9CW,kCA8CWrB,EAAasB,YACnCC,IAAKvB,EAAaoB,SAEpB,cAAGD,UAAU,iBAAb,SAA+BnB,EAAawB,WAC3CtB,EAASuB,OAAS,GACjB,4BACE,uCACA,eAAIN,UAAU,eAAd,SACGjB,EAASwB,KAAI,SAAAC,GAAO,OACnB,eAAqBR,UAAU,eAA/B,UACE,cACEA,UAAU,eACVS,KAAI,0CAAqCD,EAAQE,KACjDC,OAAO,SACPC,IAAI,sBAJN,SAMGJ,EAAQK,QAPJL,EAAQM,GADE,UAezB,mDAEF,SAAC,KAAD,CAAMC,GAAE,kBAAarC,EAAb,SAA6BsB,UAAU,MAA/C,mBAGA,SAAC,KAAD,CAAMe,GAAE,kBAAarC,EAAb,YAAgCsB,UAAU,MAAlD,yBAKF,yCAIP,C,sBCxFD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQX,EAAKY,GACpE,IACE,IAAIC,EAAON,EAAIP,GAAKY,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO9B,GAEP,YADAyB,EAAOzB,EAET,CAEI6B,EAAKE,KACPP,EAAQM,GAERE,QAAQR,QAAQM,GAAOG,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,EAClE,CAEA,SAASH,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport '../MovieDetails/MovieDetails.css';\nimport { useDarkMode } from '../Utils/DarkMode';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [trailers, setTrailers] = useState([]);\n  const { darkMode } = useDarkMode();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n        );\n        const data = await response.json();\n        setMovieDetails(data);\n      } catch (error) {\n        console.error('Error while fetching data:', error);\n      }\n    };\n\n    const fetchMovieTrailers = async () => {\n      try {\n        const apiKey = '9a72da818298f390a1dbda79726b9d32';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`\n        );\n        const data = await response.json();\n        setTrailers(data.results.filter(video => video.type === 'Trailer'));\n      } catch (error) {\n        console.error('Error while fetching data:', error);\n      }\n    };\n\n    fetchMovieDetails();\n    fetchMovieTrailers();\n  }, [movieId]);\n\n  return (\n    <div className={`movie-container ${darkMode ? 'dark-mode' : ''}`}>\n      {movieDetails ? (\n        <div>\n          <h2 className=\"movie-title\">{movieDetails.title}</h2>\n          <img\n            className=\"movie-image\"\n            src={IMAGE_BASE_URL + movieDetails.poster_path}\n            alt={movieDetails.title}\n          />\n          <p className=\"movie-overview\">{movieDetails.overview}</p>\n          {trailers.length > 0 ? (\n            <div>\n              <h3>Trailers:</h3>\n              <ul className=\"trailer-list\">\n                {trailers.map(trailer => (\n                  <li key={trailer.id} className=\"trailer-item\">\n                    <a\n                      className=\"trailer-link\"\n                      href={`https://www.youtube.com/watch?v=${trailer.key}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {trailer.name}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            <p>No trailers available.</p>\n          )}\n          <Link to={`/movies/${movieId}/cast`} className=\"btn\">\n            Cast\n          </Link>\n          <Link to={`/movies/${movieId}/reviews`} className=\"btn\">\n            Reviews\n          </Link>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","trailers","setTrailers","darkMode","useDarkMode","useEffect","fetchMovieDetails","fetch","response","json","data","console","error","fetchMovieTrailers","results","filter","video","type","className","title","src","poster_path","alt","overview","length","map","trailer","href","key","target","rel","name","id","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}